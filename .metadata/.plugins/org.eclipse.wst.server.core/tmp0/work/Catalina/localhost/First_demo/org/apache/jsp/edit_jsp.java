/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-07-23 15:08:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dao.Userdao;
import Model.user;

public final class edit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("dao.Userdao");
    _jspx_imports_classes.add("Model.user");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<!-- Required meta tags -->\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("\r\n");
      out.write("<title>Edit</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

	int id = Integer.parseInt(request.getParameter("id"));
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");

	user u = Userdao.getUserById(id);
	
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<form action=\"UserController\" method=\"post\">\r\n");
      out.write("			<table cellspacing=\"15\" class=\"tbl_reg d-grid gap-2 col-6 mx-auto\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\" class=\"text-center\">\r\n");
      out.write("						<h1>Edit Form</h1>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><input class=\"form-control my-3\" type=\"hidden\" name=\"id\"  value=\"");
      out.print(u.getId());
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><label>Name : </label></td>\r\n");
      out.write("					<td><input class=\"form-control my-3\" type=\"text\" name=\"name\" value=\"");
      out.print(u.getName());
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><label>Address : </label></td>\r\n");
      out.write("					<td><input class=\"form-control my-3\" type=\"text\" name=\"address\"  value=\"");
      out.print(u.getAddress());
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><label>Email : </label></td>\r\n");
      out.write("					<td><input class=\"form-control my-3\" type=\"email\" name=\"email\"  value=\"");
      out.print(u.getEmail());
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><label>Password : </label></td>\r\n");
      out.write("					<td><input class=\"form-control my-3\" type=\"text\" name=\"password\" value=\"");
      out.print(u.getPassword());
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><label>Country : </label></td>\r\n");
      out.write("					");

					String country = u.getCountry();
					
      out.write("\r\n");
      out.write("					<td><select name=\"country\" id=\"Country\" class=\"form-select my-3\">\r\n");
      out.write("							<option value=\"India\" class=\"form-control my-3\"\r\n");
      out.write("								");
      out.print(country.equalsIgnoreCase("India") ? "selected" : "");
      out.write(">India</option>\r\n");
      out.write("							<option value=\"USA\" class=\"form-control\"\r\n");
      out.write("								");
      out.print(country.equalsIgnoreCase("USA") ? "selected" : "");
      out.write(">USA</option>\r\n");
      out.write("							<option value=\"Canada\" class=\"form-control\"\r\n");
      out.write("								");
      out.print(country.equalsIgnoreCase("Canada") ? "selected" : "");
      out.write(">Canada</option>\r\n");
      out.write("							<option value=\"UK\" class=\"form-control\"\r\n");
      out.write("								");
      out.print(country.equals("UK") ? "selected" : "");
      out.write(">UK</option>\r\n");
      out.write("					</select></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><label>Gender : </label></td>\r\n");
      out.write("					");

					String gender = u.getGender();
					
      out.write("\r\n");
      out.write("					<td><label class=\"form-check-inline my-3\"> <input\r\n");
      out.write("							type=\"radio\" name=\"gender\" value=\"male\" class=\"form-check-input\"\r\n");
      out.write("							");
      out.print(gender.equalsIgnoreCase("male") ? "checked" : "");
      out.write(">\r\n");
      out.write("							Male\r\n");
      out.write("					</label> <label class=\"form-check-inline my-3\"> <input type=\"radio\"\r\n");
      out.write("							name=\"gender\" value=\"female\" class=\"form-check-input\"\r\n");
      out.write("							");
      out.print(gender.equalsIgnoreCase("female") ? "checked" : "");
      out.write(">\r\n");
      out.write("							Female\r\n");
      out.write("					</label></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><label>Hobbies : </label></td>\r\n");
      out.write("					<td>\r\n");
      out.write("						");

						String[] hobbiesArray = u.getHobbies();
						
      out.write(" <label class=\"form-check-inline my-3\"> <input\r\n");
      out.write("							type=\"checkbox\" class=\"form-check-input\" name=\"hobbie\"\r\n");
      out.write("							value=\"playing\"\r\n");
      out.write("							");
for (String hobby : hobbiesArray) {
	if (hobby.equalsIgnoreCase("playing")) {
      out.write("\r\n");
      out.write("							checked ");
}
}
      out.write("> playing\r\n");
      out.write("					</label> <label class=\"form-check-inline my-3\"> <input type=\"checkbox\"\r\n");
      out.write("							name=\"hobbie\" value=\"Dancing\" class=\"form-check-input\"\r\n");
      out.write("							");
for (String hobby : hobbiesArray) {
	if (hobby.equalsIgnoreCase("dancing")) {
      out.write("\r\n");
      out.write("							checked ");
}
}
      out.write("> Dancing\r\n");
      out.write("					</label> <label class=\"form-check-inline my-3\"> <input type=\"checkbox\"\r\n");
      out.write("							name=\"hobbie\" value=\"Reading\" class=\"form-check-input\"\r\n");
      out.write("							");
for (String hobby : hobbiesArray) {
	if (hobby.equalsIgnoreCase("reading")) {
      out.write("\r\n");
      out.write("							checked ");
}
}
      out.write("> Reading\r\n");
      out.write("					</label>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\"><input type=\"Submit\" name=\"action\"\r\n");
      out.write("						value=\"update\" class=\"d-grid gap-2 col-6 mx-auto btn btn-primary reg_submit\" id=\"reg_submit\" /></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("			<!-- <h4>\r\n");
      out.write("				<a href=\"home.jsp\">List</a>\r\n");
      out.write("			</h4> -->\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
